<!DOCTYPE html>
<html lang="en">
<%- include('../../partials/head') %>

    <body style="background-color: rgb(243, 241, 238)">
        <nav class="navbar navbar-expand-sm navbar-light bg-light shadow-3">
            <div class="container">
                <button class="navbar-toggler d-lg-none" type="button" data-bs-toggle="collapse"
                    data-bs-target="#collapsibleNavId" aria-controls="collapsibleNavId" aria-expanded="false"
                    aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <button class="btn btn-transparent" type="button" data-bs-toggle="offcanvas"
                    data-bs-target="#offcanvasRight" aria-controls="offcanvasRight">
                    <img id="userIconProfile"
                        src="<%= /http/.test(userLogin.icon) ? userLogin.icon : `/images/iconsProfile/${userLogin.icon}` %>"
                        class="iconProfile me-2" alt="" />
                    <%= userLogin.name %> <i class="fa-solid fa-caret-down fa-lg"></i>
                </button>
                <!-- Menú de navegación -->
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav ms-auto"> <!-- 'ms-auto' para alinear a la derecha -->
                        <li class="nav-item">
                            <a class="nav-link" href="/stock">Regresar</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>

        <main>
            <%- include('../../partials/modals') %> <%- include('../../partials/canvasMenu') %>



                    <!-- TITULO H1 -->
                    <div class="container-fluid mt-4">
                        <p class="text-black h2 text-center shadow-3">
                            <strong>Editar Productos de: <%= proyecto.nombre %>
                            </strong>
                        </p>
                        <hr class="text-black" />
                    </div>




                    <!-- TABLA DE PRODUCTOS -->
                    <div class="container-fluid">
                        <!-- BOTON MODAL AGREGAR PRODUCTO -->
                        <button type="button" class="btn btn-primary mb-2" data-bs-toggle="modal"
                            data-bs-target="#agregarProductos">
                            Agregar Productos +
                        </button>
                        <!-- Modal -->
                        <div class="modal fade" id="agregarProductos" tabindex="-1" aria-labelledby="exampleModalLabel"
                            aria-hidden="true">
                            <div class="modal-dialog modal-xl">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="exampleModalLabel">Elije los productos que queres
                                            agregar al proyecto:</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal"
                                            aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="container-fluid">
                                            <% const productosEnProyecto=productos.map(item=> item.productoId); %>
                                                <% productosNuevos.forEach((item, index)=> { %>
                                                    <% if (index % 4===0) { %>
                                                        <div class="row mt-2">
                                                            <% } %>
                                                                <% if (!productosEnProyecto.includes(item.id)) { %>
                                                                    <div class="col-md-3 col-sm-6 mb-2">
                                                                        <div class="form-check form-switch">
                                                                            <input
                                                                                class="form-check-input switchProducts"
                                                                                type="checkbox"
                                                                                id="flexSwitchCheck<%= item.id %>"
                                                                                data-producto-id="<%= item.id %>">
                                                                            <label class="form-check-label"
                                                                                for="flexSwitchCheck<%= item.id %>">
                                                                                <%= item.nombre %> <i
                                                                                        class="fa-solid fa-tag"></i>
                                                                            </label>
                                                                        </div>
                                                                    </div>
                                                                    <% } %>
                                                                        <% if ((index + 1) % 4===0 || (index +
                                                                            1)===productosNuevos.length) { %>
                                                        </div>
                                                        <% } %>
                                                            <% }) %>
                                        </div>
                                    </div>

                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary"
                                            data-bs-dismiss="modal">Cerrar</button>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <br>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">Producto</th>
                                    <th scope="col">Cantidad a Producir</th>
                                    <th scope="col">Costo Unitario</th>
                                    <th scope="col">Costo Total</th>
                                    <th scope="col">Acciones</th>
                                </tr>
                            </thead>
                            <tbody id="<%= proyecto.id %>">
                                <% productos.forEach(item=> { %>
                                    <tr>
                                        <td class="text-center">
                                            <strong>
                                                <%= item.producto.nombre %>
                                            </strong>
                                        </td>
                                        <td>
                                            <!-- ACTUALIZAR CANTIDAD -->
                                            <div class="d-flex justify-content-center align-items-center ">
                                                <div class="col-md-8">
                                                    <input type="number" class="form-control cantidad-input"
                                                        data-producto-id="<%= item.productoId %>"
                                                        placeholder="Ingrese cantidad"
                                                        value="<%= item.cantidadAProducir %>">
                                                </div>
                                                <button type="button" class="btn btn-primary actualizar-btn"><i
                                                        class="fa-solid fa-pen-to-square"></i></button>
                                            </div>
                                        </td>
                                        <td>
                                            <!-- ACTUALIZAR COSTO -->
                                            <div class="d-flex justify-content-center align-items-center ">
                                                <div class="col-md-8">
                                                    <input type="number" class="form-control costo-input"
                                                        data-producto-id="<%= item.productoId %>"
                                                        data-proyecto-id="<%= proyecto.id %>"
                                                        placeholder="Ingrese costo" value="<%= item.costoUnitario %>">
                                                </div>
                                                <button type="button" class="btn btn-success actualizar-costo-btn"><i
                                                        class="fa-solid fa-pen-to-square"></i></button>
                                            </div>

                                        </td>
                                        <td><strong class="text-lg">$<%= item.costoTotal %></strong>
                                        </td>
                                        <td> <!-- ELIMINAR PRODUCTO -->
                                            <button type="button" id="deleteProduct_<%= item.productoId %>"
                                                class="btn btn-danger mt-1 deleteProduct"
                                                data-producto-id="<%= item.productoId %>">
                                                <i class="fa-solid fa-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                    <% }) %>
                            </tbody>
                        </table>
                    </div>

        </main>


        <script>
            //realizo el fecth a mi api para actualizar la cantidad del producto
            document.querySelectorAll('.actualizar-btn').forEach(btn => {
                btn.addEventListener('click', async function () {

                    const tbody = document.getElementById('<%= proyecto.id %>');
                    if (!tbody) return;

                    const proyectoId = tbody.getAttribute('id');
                    const productoId = this.parentElement.querySelector('.cantidad-input').getAttribute('data-producto-id');
                    const cantidad = this.parentElement.querySelector('.cantidad-input').value;

                    const data = {
                        productoId: productoId,
                        cantidad: cantidad
                    }

                    try {

                        const response = await fetch(`http://localhost:3000/api/stock/editCantidad/${proyectoId}`, {
                            method: 'PUT',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(data)
                        });

                        if (!response.ok) {
                            throw new Error('Error al actualizar la cantidad')
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: "Algo salió mal",
                                footer: '<a href="/">Volver al inicio</a>'
                            });
                        } else {
                            Swal.fire("¡Cantidad actualizada!");
                            setTimeout(function () {
                                location.reload();
                            }, 2000);
                        }

                    } catch (error) {
                        console.error('Error:', error);
                    }
                });
            });       
        </script>
        <script>
            //realizo el fetch para actualizar costo del producto
            document.querySelectorAll('.actualizar-costo-btn').forEach(btn => {
                btn.addEventListener('click', async function () {
                    const proyectoId = this.parentElement.querySelector('.costo-input').getAttribute('data-proyecto-id');
                    const productoId = this.parentElement.querySelector('.costo-input').getAttribute('data-producto-id');
                    const costo = this.parentElement.querySelector('.costo-input').value;

                    console.log(proyectoId);
                    console.log(productoId);
                    console.log(costo);

                    try {
                        const response = await fetch(`http://localhost:3000/api/stock/editCosto/${proyectoId}`, {
                            method: 'PUT',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                productoId: productoId,
                                costoUnitario: costo
                            })
                        });

                        if (response.ok) {
                            const data = await response.json();
                            console.log(data); // Aquí puedes manejar la respuesta, mostrar un mensaje de éxito, etc.
                            Swal.fire("¡Costo unitario actualizado!");
                            setTimeout(function () {
                                location.reload();
                            }, 2000);
                        } else {
                            throw new Error('Error al actualizar el costo')
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: "Algo salió mal",
                                footer: '<a href="/">Volver al inicio</a>'
                            });
                        }
                    } catch (error) {
                        console.error(error);
                        // Aquí puedes manejar el error, mostrar un mensaje al usuario, etc.
                    }
                });
            });
        </script>

        <script>
            //realizo el fetch para eliminar el producto del proyecto
            const deleteBTN = document.querySelectorAll('.deleteProduct');

            deleteBTN.forEach(form => {
                form.addEventListener('click', async function (event) {
                    Swal.fire({
                        title: "Seguro quieres quitar el producto??",
                        text: "Chequea bien el producto que deseas quitar del proyecto",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Si, quitar!"
                    }).then(async (result) => { // Aquí utilizamos async para poder utilizar await dentro de este bloque then
                        if (result.isConfirmed) {
                            const tbody = document.getElementById('<%= proyecto.id %>');
                            const proyectoId = tbody.id
                            const productoId = this.getAttribute('data-producto-id');

                            try {
                                const response = await fetch(`http://localhost:3000/api/stock/deleteProduct/${proyectoId}`, {
                                    method: 'DELETE',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    },
                                    body: JSON.stringify({
                                        productoId: productoId,
                                    })
                                });

                                if (response.ok) {
                                    Swal.fire("¡Producto quitado del proyecto!");
                                    setTimeout(function () {
                                        location.reload();
                                    }, 2000);
                                } else {
                                    throw new Error('Error al quitar el producto');
                                }
                            } catch (error) {
                                console.error(error);
                                Swal.fire({
                                    icon: "error",
                                    title: "Oops...",
                                    text: "Algo salió mal",
                                    footer: '<a href="/">Volver al inicio</a>'
                                });
                            }
                        }
                    });
                });
            });
        </script>
        <script>
            //Realizo el fetch para agregar productos al proyecto
            const switchProducts = document.querySelectorAll('.switchProducts');

            switchProducts.forEach(product => {
                product.addEventListener('change', async function (event) {
                    const productoId = this.getAttribute('data-producto-id');
                    const tbody = document.getElementById('<%= proyecto.id %>');
                    const proyectoId = tbody.id;

                    try {

                        const response = await fetch(`http://localhost:3000/api/stock/newProduct`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                proyectoId: proyectoId,
                                productoId: productoId,
                            })
                        });

                        if (response.ok) {
                            Swal.fire({
                                position: "top-end",
                                icon: "success",
                                title: "¡Producto agregado al proyecto!",
                                showConfirmButton: false,
                                timer: 1500
                            });
                            setTimeout(function () {
                                location.reload();
                            }, 1500);
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: "Algo salió mal",
                                footer: '<a href="/">Volver al inicio</a>'
                            });
                        }

                    } catch (error) {
                        console.error(error);
                    }

                })
            })

        </script>


        <%- include('../../partials/scripts') %>
    </body>

</html>